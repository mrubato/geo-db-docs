{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Geo DB API",
        "description": "This developer-centric REST API focuses on getting global city and region data. Easily obtain country, region, and city data for use in your apps! <ul><li>Filter cities by name prefix, country, location, time-zone, and even minimum population.<\/li><li>Sort cities by name, country code, elevation, and population - or any combination of these.<\/li> <li>Get all country regions.<\/li> <li>Get all cities in a given region.<\/li> <li>Developer-friendly RESTful API adheres to industry best-practices, including HATEOAS-style links to facilitate paging results.<\/li> <li>Backed by cloud-based load-balanced infrastructure for resiliency and performance!<\/li> <li>Data is periodically refreshed from GeoNames.org.<\/li><\/ul><p>Notes:<ul><li>All endpoints implicitly support JSONP-style invocation via an optional <tt>callback<\/tt> param.<\/li><li>Since the database is periodically updated, this may <strong>very rarely<\/strong> result in certain cities being marked deleted (e.g., duplicates removed). By default, endpoints returning city data will exclude cities marked deleted. However, in the unlikely event that this occurs while your app is paging through a set of affected results - and you care about the paged results suddenly changing underneath - specify <tt>includeDeleted=SINCE_YESTERDAY<\/tt> (or <tt>SINCE_LAST_WEEK<\/tt> if you're really paranoid!).<\/li><\/ul><hr/><h3>Useful Resources<\/h3><ul><li>SDKs<ul><li><a href='https://www.npmjs.com/package/wft-geodb-angular-client'>Angular<\/a>, <a href='https://github.com/wirefreethought/geo-db-sample-angular-app'>Sample App<\/a><\/li><li><a href='https://github.com/wirefreethought/geo-db-java-client'>Java<\/a><\/li><li><a href='https://www.npmjs.com/package/wft-geodb-js-client'>JavaScript<\/a><\/li><\/ul><li><a href='swagger.json'>Swagger Docs<\/a><\/li><li><a href='http://creativecommons.org/licenses/by/3.0/'>Usage License<\/a><\/i><\/li><\/ul>",
        "license": {
            "name": "Creative Commons Attribution 3.0",
            "url": "http://creativecommons.org/licenses/by/3.0/"
        }
    },
    "host": "wft-geo-db.p.mashape.com",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "basePath": "/",
    "tags": [
        {
            "name": "Geo",
            "description": "Geo Endpoints"
        },
        {
            "name": "Locale",
            "description": "Locale Endpoints"
        }
    ],
    "securityDefinitions": {
        "UserSecurity": {
            "type": "apiKey",
            "name": "X-Mashape-Key",
            "in": "header"
        }
    },
    "security": [
        {
            "UserSecurity": []
        }
    ],
    "paths": {
        "/v1/geo/cities": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Find cities",
                "description": "Find cities, filtering by optional criteria. If no criteria are set, you will get back all known cities with a population of at least 1000. (Currently over 115,000.) If countryCode is specified, the country info will be omitted in the response.",
                "operationId": "findCitiesUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "namePrefix",
                        "in": "query",
                        "description": "Only cities whose names start with this prefix",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countryCodes",
                        "in": "query",
                        "description": "Only cities in these countries (comma-delimited country codes)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "excludedCountryCodes",
                        "in": "query",
                        "description": "Only cities NOT in these countries (comma-delimited country codes)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "minPopulation",
                        "in": "query",
                        "description": "Only cities having at least this population",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Only cities near this location. Latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "The location radius within which to find cities",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "distanceUnit",
                        "in": "query",
                        "description": "The unit of distance: MI | KM",
                        "required": false,
                        "type": "string",
                        "default": "MI"
                    },
                    {
                        "name": "timeZoneIds",
                        "in": "query",
                        "description": "Only cities in these time-zones",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "How to sort the results. Format: ±SORT_FIELD,±SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The zero-ary offset index into the results",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "includeDeleted",
                        "in": "query",
                        "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                        "required": false,
                        "type": "string",
                        "default": "NONE"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CitiesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geo/cities/{cityId}/nearbyCities": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Find cities near city",
                "description": "Find cities near the given origin city, filtering by optional criteria. If no criteria are set, you will get back all known cities with a population of at least 1000. (Currently over 115,000.)",
                "operationId": "findCitiesNearCityUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "cityId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "minPopulation",
                        "in": "query",
                        "description": "Only cities having at least this population",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "The location radius within which to find cities",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "distanceUnit",
                        "in": "query",
                        "description": "The unit of distance: MI | KM",
                        "required": false,
                        "type": "string",
                        "default": "MI"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "How to sort the results. Format: ±SORT_FIELD,±SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The zero-ary offset index into the results",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "includeDeleted",
                        "in": "query",
                        "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                        "required": false,
                        "type": "string",
                        "default": "NONE"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CitiesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geo/locations/{locationId}/nearbyCities": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Find cities near location",
                "description": "Find cities near the given location, filtering by optional criteria. If no criteria are set, you will get back all known cities with a population of at least 1000. (Currently over 115,000.)",
                "operationId": "findCitiesNearLocationUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "locationId",
                        "in": "path",
                        "description": "Only cities near this location. Latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "minPopulation",
                        "in": "query",
                        "description": "Only cities having at least this population",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "namePrefix",
                        "in": "query",
                        "description": "Only cities whose names start with this prefix",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "The location radius within which to find cities",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "distanceUnit",
                        "in": "query",
                        "description": "The unit of distance: MI | KM",
                        "required": false,
                        "type": "string",
                        "default": "MI"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "How to sort the results. Format: ±SORT_FIELD,±SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "default": 5,
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The zero-ary offset index into the results",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "includeDeleted",
                        "in": "query",
                        "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                        "required": false,
                        "type": "string",
                        "default": "NONE"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CitiesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geo/cities/{cityId}": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Get city details",
                "description": "Get the details for a specific city, including location coordinates, population, and elevation above sea-level (if available).",
                "operationId": "getCityUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "The city id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CityResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geo/cities/{cityId}/distance": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Get city distance",
                "description": "Get distance to the given city",
                "operationId": "getCityDistanceUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "cityId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fromCityId",
                        "in": "query",
                        "description": "Distance from this city",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "distanceUnit",
                        "in": "query",
                        "description": "The unit of distance: MI | KM",
                        "required": false,
                        "type": "string",
                        "default": "MI"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DistanceResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geo/cities/{cityId}/dateTime": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Get city date-time",
                "description": "Get city date-time",
                "operationId": "getCityDateTimeUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "cityId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DateTimeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geo/cities/{cityId}/time": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Get city time",
                "description": "Get city time",
                "operationId": "getCityTimeUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "cityId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TimeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geo/countries": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Find countries",
                "description": "Find countries, filtering by optional criteria. If no criteria are set, you will get back all known countries.",
                "operationId": "getCountriesUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "namePrefix",
                        "in": "query",
                        "description": "Only countries whose names start with this prefix",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "description": "Only countries supporting this currency",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The zero-ary offset index into the results",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CountriesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geo/countries/{countryCode}": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Get country details",
                "description": "Get the details for a specific country, including number of regions.",
                "operationId": "getCountryUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "countryCode",
                        "in": "path",
                        "description": "An ISO-3166 country code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CountryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geo/countries/{countryCode}/regions": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Find country regions",
                "description": "Get all regions in a specific country. These could be states, provinces, districts, or otherwise major political divisions.",
                "operationId": "getRegionsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "countryCode",
                        "in": "path",
                        "description": "An ISO-3166 country code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "namePrefix",
                        "in": "query",
                        "description": "Only regions whose names start with this prefix",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The zero-ary offset index into the results",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegionsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geo/countries/{countryCode}/regions/{regionCode}": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Get region details",
                "description": "Get the details of a specific country region, including number of cities.",
                "operationId": "getRegionUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "countryCode",
                        "in": "path",
                        "description": "An ISO-3166 country code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "regionCode",
                        "in": "path",
                        "description": "An HASC, ISO-3166, or FIPS region code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geo/countries/{countryCode}/regions/{regionCode}/cities": {
            "get": {
                "tags": [
                    "Geo"
                ],
                "summary": "Find country region cities",
                "description": "Get the cities in a specific country region. The country and region info is omitted in the response.",
                "operationId": "findRegionCitiesUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "countryCode",
                        "in": "path",
                        "description": "An ISO-3166 country code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "regionCode",
                        "in": "path",
                        "description": "An HASC, ISO-3166, or FIPS region code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "minPopulation",
                        "in": "query",
                        "description": "Only cities having at least this population",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "How to sort the results. Format: ±SORT_FIELD,±SORT_FIELD where SORT_FIELD = elevation | name | population",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The zero-ary offset index into the results",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "includeDeleted",
                        "in": "query",
                        "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
                        "required": false,
                        "type": "string",
                        "default": "NONE"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CitiesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/locale/currencies": {
            "get": {
                "tags": [
                    "Locale"
                ],
                "summary": "Find currencies",
                "description": "Find currencies, filtering by optional criteria. If no criteria are set, you will get back all known currencies.",
                "operationId": "getCurrenciesUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "Only currencies supported by this country",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The zero-ary offset index into the results",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CurrenciesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/locale/locales": {
            "get": {
                "tags": [
                    "Locale"
                ],
                "summary": "Get locales",
                "description": "Get all known locales",
                "operationId": "getLocalesUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The zero-ary offset index into the results",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LocalesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/locale/timezones": {
            "get": {
                "tags": [
                    "Locale"
                ],
                "summary": "Get time-zones",
                "description": "Get all known time-zones",
                "operationId": "getTimezonesUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of results to retrieve",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The zero-ary offset index into the results",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TimeZonesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/locale/timezones/{zoneId}/dateTime": {
            "get": {
                "tags": [
                    "Locale"
                ],
                "summary": "Get time-zone date-time",
                "description": "Get time-zone date-time",
                "operationId": "getTimeZoneDateTimeUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "zoneId",
                        "in": "path",
                        "description": "zoneId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DateTimeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/locale/timezones/{zoneId}/time": {
            "get": {
                "tags": [
                    "Locale"
                ],
                "summary": "Get time-zone time",
                "description": "Get time-zone time",
                "operationId": "getTimeZoneTimeUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "zoneId",
                        "in": "path",
                        "description": "zoneId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TimeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "CitiesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "A list of CitySummaries",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CitySummary"
                    }
                },
                "errors": {
                    "description": "A list of WftErrors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                },
                "links": {
                    "description": "A list of Links",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                }
            }
        },
        "CityDetails": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "elevationMeters": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "location": {
                    "$ref": "#/definitions/GeoLocation"
                },
                "population": {
                    "type": "integer",
                    "format": "int32"
                },
                "region": {
                    "type": "string"
                },
                "regionCode": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                }
            }
        },
        "CityResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/CityDetails"
                },
                "errors": {
                    "description": "A list of WftErrors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                }
            }
        },
        "CitySummary": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "distance": {
                    "type": "number",
                    "format": "double",
                    "description": "Included if the result of a distance query"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "latitude": {
                    "type": "number",
                    "format": "double"
                },
                "longitude": {
                    "type": "number",
                    "format": "double"
                },
                "region": {
                    "type": "string"
                },
                "regionCode": {
                    "type": "string"
                }
            }
        },
        "CountriesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "A list of CountrySummarys",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CountrySummary"
                    }
                },
                "errors": {
                    "description": "A list of WftErrors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                },
                "links": {
                    "description": "A list of Links",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                }
            }
        },
        "CountrySummary": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "currencyCode": {
                    "description": "A ISO-4217 currency code",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "CountryDetails": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "currencyCode": {
                    "description": "A ISO-4217 currency code",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numRegions": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CountryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/CountryDetails"
                },
                "errors": {
                    "description": "A list of WftErrors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                }
            }
        },
        "CurrenciesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "A list of CurrencyDescriptors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CurrencyDescriptor"
                    }
                },
                "errors": {
                    "description": "A list of WftErrors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                },
                "links": {
                    "description": "A list of Links",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                }
            }
        },
        "CurrencyDescriptor": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "A ISO-4217 currency code",
                    "type": "string"
                },
                "countryCodes": {
                    "description": "A list of ISO-3166 country codes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DateTimeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "format": "date-time"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                }
            }
        },
        "DistanceResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "number",
                    "format": "double"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                }
            }
        },
        "GeoLocation": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number",
                    "format": "double"
                },
                "longitude": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "Link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                }
            }
        },
        "LocaleDescriptor": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "LocalesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "A list of LocalDescriptors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LocaleDescriptor"
                    }
                },
                "errors": {
                    "description": "A list of WftErrors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                },
                "links": {
                    "description": "A list of Links",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                }
            }
        },
        "Metadata": {
            "type": "object",
            "properties": {
                "currentOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "RegionDetails": {
            "type": "object",
            "properties": {
                "capital": {
                    "type": "string"
                },
                "countryCode": {
                    "description": "An ISO-3166 country code",
                    "type": "string"
                },
                "fipsCode": {
                    "type": "string"
                },
                "hascCode": {
                    "type": "string"
                },
                "isoCode": {
                    "type": "string"
                },
                "name": {
                    "description": "The well-known internationally recognized name for this region",
                    "type": "string"
                },
                "numCities": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RegionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/RegionDetails"
                },
                "errors": {
                    "description": "A list of WftErrors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                }
            }
        },
        "RegionSummary": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "description": "An ISO-3166 country code",
                    "type": "string"
                },
                "fipsCode": {
                    "type": "string"
                },
                "hascCode": {
                    "type": "string"
                },
                "isoCode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "RegionsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "A list of RegionSummaries",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegionSummary"
                    }
                },
                "errors": {
                    "description": "A list of WftErrors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                },
                "links": {
                    "description": "A list of Links",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                }
            }
        },
        "TimeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                }
            }
        },
        "TimeZoneDescriptor": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rawUtcOffsetHours": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TimeZonesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeZoneDescriptor"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WftError"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                }
            }
        },
        "WftError": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/WftErrorCode"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "WftErrorCode": {
            "type": "string",
            "enum": [
                "ACCESS_DENIED",
                "ENTITY_NOT_FOUND",
                "INCOMPATIBLE",
                "PARAM_INVALID",
                "PARAMS_MUTUALLY_EXCLUSIVE"
            ]
        }
    }
}
